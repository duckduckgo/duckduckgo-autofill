import { generateFiles } from '../api-call-generator.js'
import { join } from 'path'

describe('api call generator', () => {
    it.skip('generates files from fixtures', async () => {
        const [ts, validators, apiCalls] = await generateFiles(
            join(process.cwd(), 'scripts/tests/fixtures')
        )
        expect(ts.content).toMatchInlineSnapshot(`
      "/* tslint:disable */
      /**
       * This file was automatically generated by json-schema-to-typescript.
       * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
       * and run json-schema-to-typescript to regenerate this file.
       */

      /**
       * This describes all of the top-level generated types
       * @internal
       */
      export interface API {
        getAutofillData: GetAutofillData;
      }
      export interface GetAutofillData {
        paramsValidator?: ExampleParams;
        resultValidator?: ExampleResult;
        [k: string]: unknown;
      }
      export interface ExampleParams {
        secret: string;
      }
      export interface ExampleResult {
        secret: string;
      }
      "
    `)
        expect(validators.content).toMatchInlineSnapshot(`
      "// Generated by ts-to-zod
      import { z } from \\"zod\\";

      export const exampleParamsSchema = z.object({
          secret: z.string()
      });

      export const exampleResultSchema = z.object({
          secret: z.string()
      });

      export const getAutofillDataSchema = z.record(z.unknown()).and(z.object({
          paramsValidator: exampleParamsSchema.optional(),
          resultValidator: exampleResultSchema.optional()
      }));

      export const apiSchema = z.object({
          getAutofillData: getAutofillDataSchema
      });
      "
    `)
        expect(apiCalls.content).toMatchInlineSnapshot(`
      "import {
          exampleParamsSchema,
          exampleResultSchema
      } from \\"./validators.zod.js\\"
      import { DeviceApiCall } from \\"../../../packages/device-api\\";

      /**
       * @extends {DeviceApiCall<exampleParamsSchema, exampleResultSchema>} 
       */
      export class GetAutofillDataCall extends DeviceApiCall {
        method = \\"getAutofillData\\"
        paramsValidator = exampleParamsSchema
        resultValidator = exampleResultSchema
      }"
    `)
    })
})
